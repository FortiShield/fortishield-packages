#!/bin/sh
# postinst script for wazuh-dashboards
# Copyright (C) 2021, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

set -e

export NAME=wazuh-dashboards
export CONFIG_DIR=/etc/"${NAME}"
export INSTALLATION_DIR=/usr/share/"${NAME}"
export LOG_DIR=/var/log/"${NAME}"
export PID_DIR=/run/${NAME}

#
# This script is executed in the post-removal phase
#
#   On Debian,
#       $1=remove    : indicates a removal
#       $1=purge     : indicates an upgrade

# source the default env file
if [ -f "/etc/default/${NAME}" ]; then
    . "/etc/default/${NAME}"
fi


REMOVE_DIRS=false
REMOVE_CONFIG_DIRECTORY=false
REMOVE_USER_AND_GROUP=false


case "$1" in
    remove)
        REMOVE_DIRS=true
    ;;

    purge)
        REMOVE_DIRS=true
        REMOVE_CONFIG_DIRECTORY=true
        REMOVE_USER_AND_GROUP=true
    ;;
    failed-upgrade|abort-install|upgrade|abort-upgrade|disappear)
    ;;

    *)  

        echo "post remove script called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


if [ "$REMOVE_DIRS" = "true" ]; then

    if [ -d "${LOG_DIR}" ]; then
        rmdir --ignore-fail-on-non-empty "${LOG_DIR}"
    fi

    if [ -d ${PID_DIR} ]; then
        echo -n "Deleting PID directory..."
        rm -rf ${PID_DIR} > /dev/null 2>&1
        echo " OK"
    fi

    if [ -d "${INSTALLATION_DIR}" ]; then
        echo -n "Deleting installation directory..."
        rm -rf "${INSTALLATION_DIR}"
        echo " OK"
    fi

    if [ -f /etc/default/"${NAME}" ]; then
        echo -n "Deleting Default File..."
        rm -rf /etc/default/"${NAME}"
        echo " OK"
    fi

    if [ -f /etc/systemd/system/"${NAME}" ]; then
        echo -n "Deleting Init.d File..."
        rm -rf /etc/systemd/system/"${NAME}"
        echo " OK"
    fi

    if [ -f /etc/systemd/system/"${NAME}".service ]; then
        echo -n "Deleting Service File..."
        rm -rf /etc/systemd/system/"${NAME}".service
        echo " OK"
    fi

    # Delete the config directory if we are purging
    if [ "$REMOVE_CONFIG_DIRECTORY" = "true" ]; then
        rm -rf "${CONFIG_DIR}"
        echo " OK"
    fi

fi


if [ "$REMOVE_USER_AND_GROUP" = "true" ]; then
    if id "${NAME}" > /dev/null 2>&1 ; then
        userdel "${NAME}"
    fi

    if getent group "${NAME}" > /dev/null 2>&1 ; then
        groupdel "${NAME}"
    fi
fi
