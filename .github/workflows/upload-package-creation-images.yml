name: Upload package creation Docker images
on:
  pull_request:
    paths:
      - '.github/workflows/upload-package-creation-images.yml'
  push:
    branches:
      - master
      - 4.4
    paths:
      - 'rpms/CentOS/*'
      - 'rpms/build.sh'
  workflow_dispatch:

jobs:
  Upload-RPM-x86_64-i386-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [ {CONTAINER_NAME: rpm_builder_x86, DOCKERFILE_PATH: rpms/CentOS/6/x86_64}, {CONTAINER_NAME: rpm_builder_i386, DOCKERFILE_PATH: rpms/CentOS/6/i386}]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Copy build.sh to Dockerfile path
        run:
          cp $GITHUB_WORKSPACE/rpms/build.sh $GITHUB_WORKSPACE/${{ matrix.image.DOCKERFILE_PATH }}

      - name: Set tag as version
        run:
          if [ ! -z ${{ github.base_ref }} ]; then echo "TAG=${{ github.base_ref }}" >> $GITHUB_ENV; else echo "TAG=$(cat $GITHUB_WORKSPACE/VERSION)" >> $GITHUB_ENV ; fi

      - name: Build and push image ${{ matrix.image.CONTAINER_NAME }}_${{github.ref_name}} to Github Container Registry
        run:
          bash $GITHUB_WORKSPACE/.github/actions/common-tools/build_and_push_image_to_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} ${{matrix.image.CONTAINER_NAME}} ${{ matrix.image.DOCKERFILE_PATH }} $TAG

  Upload-RPM-armv7-ppc64le-aarch64-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [ {CONTAINER_NAME: rpm_builder_aarch64, DOCKERFILE_PATH: rpms/CentOS/7/aarch64, ARCHITECTURE: aarch64, DISTRO: ubuntu_latest}, {CONTAINER_NAME: rpm_builder_ppc64le, DOCKERFILE_PATH: rpms/CentOS/7/ppc64le, ARCHITECTURE: ppc64le, DISTRO: ubuntu_latest}, {CONTAINER_NAME: rpm_builder_armv7, DOCKERFILE_PATH: rpms/CentOS/7/armv7hl, ARCHITECTURE: armv7 , DISTRO: ubuntu_latest} ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Set tag as version
        run: |
          if [ ! -z ${{ github.base_ref }} ]; then echo "TAG=${{ github.base_ref }}" >> $GITHUB_ENV; else echo "TAG=$(cat $GITHUB_WORKSPACE/VERSION)" >> $GITHUB_ENV ; fi

      - uses: uraimo/run-on-arch-action@v2.5.0
        name: Build and push image ${{matrix.image.CONTAINER_NAME}} to Github Container Registry
        with:
          arch: ${{ matrix.image.ARCHITECTURE }}
          distro: ${{ matrix.image.DISTRO }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          dockerRunArgs: --volume /var/run/docker.sock:/var/run/docker.sock
          env:
            TAG: ${{ env.TAG }}
          install: |
            bash $GITHUB_WORKSPACE/.github/actions/common-tools/setup_docker.sh
            cp $GITHUB_WORKSPACE/rpms/build.sh $GITHUB_WORKSPACE/${{ matrix.image.DOCKERFILE_PATH }}
          run: |
            bash $GITHUB_WORKSPACE/.github/actions/common-tools/build_and_push_image_to_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} ${{matrix.image.CONTAINER_NAME}} ${{ matrix.image.DOCKERFILE_PATH }} $TAG
