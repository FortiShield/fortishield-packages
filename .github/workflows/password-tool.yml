name: Password tool script tests
on:
  pull_request:
    paths:
      - 'unattended_installer/passwords_tool/**'

jobs:
  Build-password-tool-and-wazuh-install-scripts:
   runs-on: ubuntu-latest
   steps:
      - uses: actions/checkout@v2
      - name: Build password-tool and wazuh-install scripts
        working-directory: ./unattended_installer
        run: |
          bash builder.sh -p -i
        shell: bash 
      - uses: actions/upload-artifact@v3
        with:
          name: scripts
          path: | 
            unattended_installer/wazuh-install.sh
            unattended_installer/wazuh-passwords-tool.sh
          if-no-files-found: error 
  test-password-tool-1:
    runs-on: ubuntu-latest
    needs: Build-password-tool-and-wazuh-install-scripts
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
         name: scripts
      - name: Install wazuh
        run: |
          sudo bash wazuh-install.sh -a
      - name: Uncompress wazuh install files 
        run: sudo tar -xvf wazuh-install-files.tar
      - name: Run script
        run: sudo bash .github/actions/passwords-tool/script.sh
          
  test-password-tool-2:
      runs-on: ubuntu-latest
      needs: Build-password-tool-and-wazuh-install-scripts
      steps:
        - uses: actions/checkout@v2
        - uses: actions/download-artifact@v3
          with:
           name: scripts
        - name: Install wazuh
          run: |
           sudo bash wazuh-install.sh -a
        - name: Uncompress wazuh install files 
          run: sudo tar -xvf wazuh-install-files.tar
        - name: Get wazuh API password
          run: |
            echo 'apiPass<<EOF' >> $GITHUB_ENV
            sudo cat wazuh-install-files/wazuh-passwords.txt | awk "/username: 'wazuh'/{getline;print;}" | awk '{ print $2 }' >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV 
            echo 'adminPass<<EOF' >> $GITHUB_ENV
            sudo cat wazuh-install-files/wazuh-passwords.txt | awk "/username: 'admin'/{getline;print;}" | awk '{ print $2 }' >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV  
        - name: Errors expected
          run:  |
            if ! sudo bash wazuh-passwords-tool.sh -u wazuuuh | grep "ERROR"; then
              exit 1
            elif ! sudo bash wazuh-passwords-tool.sh -u wazuh_user -p password | grep "ERROR"; then
              exit 1 
            elif ! sudo bash wazuh-passwords-tool.sh -au wazuh -ap ${{ env.apiPass }} -u wazuh -p password -A | grep "ERROR"; then
              exit 1
            elif ! curl -u wazuh:wazuh -k -X GET "https://localhost:55000/security/user/authenticate" | grep "Invalid credentials"; then
             exit 1
            elif ! curl -u wazuuh:${{ env.apiPass }} -k -X GET "https://localhost:55000/security/user/authenticate" | grep "Invalid credentials"; then
             exit 1
            elif ! curl -XGET https://localhost:9200/ -u admin:admin -k | grep "Unauthorized"; then
             exit
            elif ! curl -XGET https://localhost:9200/ -u adminnnn:${{ env.adminPass }} -k | grep "Unauthorized"; then
             exit
            fi
