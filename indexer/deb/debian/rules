#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets by Bill Allombert 2001
#
# Modified by Wazuh 
# Copyright (C) 2015-2022, Wazuh Inc.
#
# This program is a free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

export NAME=wazuh-indexer
export TARGET_DIR=${CURDIR}/debian/${NAME}

# Package build options
export USER=${NAME}
export GROUP=${NAME}
export CONFIG_DIR=/etc/${NAME}
export LOG_DIR=/var/log/${NAME}
export LIB_DIR=/var/lib/${NAME}
export PID_DIR=/var/run/${NAME}
export INSTALLATION_DIR=/usr/share/${NAME}
export BASE_DIR=${NAME}-*
export INDEXER_FILE=wazuh-indexer-base-linux-x64.tar.gz

# -----------------------------------------------------------------------------

%:
	dh $@

# -----------------------------------------------------------------------------

override_dh_shlibdeps:

# -----------------------------------------------------------------------------

override_dh_auto_configure:

# -----------------------------------------------------------------------------

override_dh_auto_install:

# -----------------------------------------------------------------------------

override_dh_install:
	rm -rf $(INSTALLATION_DIR)/

	curl -o $(INDEXER_FILE) https://s3.amazonaws.com/warehouse.wazuh.com/indexer/$(INDEXER_FILE)
	tar -zvxf $(INDEXER_FILE)

#	curl -o wazuh-cert-tool.sh https://raw.githubusercontent.com/wazuh/wazuh-documentation/${DOCUMENTATION_BRANCH}/resources/open-distro/tools/certificate-utility/wazuh-cert-tool.sh
#	curl -o instances.yml https://raw.githubusercontent.com/wazuh/wazuh-documentation/${DOCUMENTATION_BRANCH}/resources/open-distro/tools/certificate-utility/instances_aio.yml
#	curl -o wazuh-passwords-tool.sh https://raw.githubusercontent.com/wazuh/wazuh-documentation/${DOCUMENTATION_BRANCH}/resources/open-distro/tools/wazuh-passwords-tool.sh

	# Configuration files from documentation repo
#	curl -o roles.yml https://raw.githubusercontent.com/wazuh/wazuh-documentation/${DOCUMENTATION_BRANCH}/resources/open-distro/wazuh-indexer/roles/roles.yml
#	curl -o roles_mapping.yml https://raw.githubusercontent.com/wazuh/wazuh-documentation/${DOCUMENTATION_BRANCH}/resources/open-distro/wazuh-indexer/roles/roles_mapping.yml
#	curl -o internal_users.yml https://raw.githubusercontent.com/wazuh/wazuh-documentation/${DOCUMENTATION_BRANCH}/resources/open-distro/wazuh-indexer/roles/internal_users.yml

	# copy to target
	mkdir -p $(TARGET_DIR)$(INSTALLATION_DIR)
	mkdir -p $(TARGET_DIR)$(CONFIG_DIR)
	mkdir -p $(TARGET_DIR)$(LIB_DIR)
	mkdir -p $(TARGET_DIR)$(LOG_DIR)
	mkdir -p $(TARGET_DIR)/etc/init.d
	mkdir -p $(TARGET_DIR)/etc/default
	mkdir -p $(TARGET_DIR)/usr/lib/tmpfiles.d
	mkdir -p $(TARGET_DIR)/usr/lib/sysctl.d
	mkdir -p $(TARGET_DIR)/usr/lib/systemd/system

	# Move configuration files for wazuh-indexer
	mv -f $(BASE_DIR)/etc/init.d/$(NAME) $(TARGET_DIR)/etc/init.d/$(NAME)
	mv -f $(BASE_DIR)/etc/wazuh-indexer/* $(TARGET_DIR)$(CONFIG_DIR)
	mv -f $(BASE_DIR)/etc/sysconfig/$(NAME) $(TARGET_DIR)/etc/default/
	mv -f $(BASE_DIR)/usr/lib/tmpfiles.d/* $(TARGET_DIR)/usr/lib/tmpfiles.d/
	mv -f $(BASE_DIR)/usr/lib/sysctl.d/* $(TARGET_DIR)/usr/lib/sysctl.d/
	mv -f $(BASE_DIR)/usr/lib/systemd/system/wazuh-indexer_debian.service $(TARGET_DIR)/usr/lib/systemd/system/wazuh-indexer.service
	mv -f $(BASE_DIR)/usr/lib/systemd/system/wazuh-indexer-performance-analyzer.service $(TARGET_DIR)/usr/lib/systemd/system/
	rm -rf $(BASE_DIR)/etc
	rm -rf $(BASE_DIR)/usr

	# Copy installation files to final location
	cp -pr $(BASE_DIR)/* $(TARGET_DIR)$(INSTALLATION_DIR)

	# This is needed by the performance-analyzer service
#	echo false > $(LIB_DIR)/batch_metrics_enabled.conf

	# Copy Wazuh's config files for the opendistro_security plugin
#	cp -pr roles_mapping.yml $(TARGET_DIR)$(INSTALLATION_DIR)/plugins/opendistro_security/securityconfig/roles_mapping.yml
#	cp -pr roles.yml $(TARGET_DIR)$(INSTALLATION_DIR)/plugins/opendistro_security/securityconfig/roles.yml
#	cp -pr internal_users.yml $(TARGET_DIR)$(INSTALLATION_DIR)/plugins/opendistro_security/securityconfig/internal_users.yml

	# Create group and user in chroot environment
	groupadd -r $(GROUP)
	useradd --system \
			--no-create-home \
			--home-dir /nonexistent \
			--gid $(GROUP) \
			--shell /sbin/nologin \
			--comment "$(USER) user" \
			$(USER)

	chown $(USER):$(GROUP) -R $(TARGET_DIR)
	chmod ug+x $(TARGET_DIR)$(INSTALLATION_DIR)/*

#override_dh_auto_clean:
	#$(MAKE) -C src clean

# -----------------------------------------------------------------------------

override_dh_strip:
	dh_strip --no-automatic-dbgsym

# -----------------------------------------------------------------------------

.PHONY: override_dh_strip override_dh_auto_clean override_dh_auto_build override_dh_auto_configure
