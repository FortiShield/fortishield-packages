#!/bin/bash

# TODO: Check if variables can be imported from a single place, because this is already defined in rules
# and if it makes sense to replace all /etc/wazuh-indexer and /usr/share/wazuh-indexer from this file
# with those variables or if this will be autogenerated (the list of files and their permissions)
export NAME=wazuh-indexer
export CONFIG_DIR=/etc/${NAME}
export INSTALLATION_DIR=/usr/share/${NAME}
export LOG_DIR=/var/log/${NAME}
export PID_DIR=/var/run/${NAME}
export LIB_DIR=/var/lib/${NAME}


# Setting Owner and group of own folders
chown -R ${NAME}:${NAME} ${CONFIG_DIR}
chown -R ${NAME}:${NAME} ${INSTALLATION_DIR}
chown -R ${NAME}:${NAME} ${LOG_DIR}
chown -R ${NAME}:${NAME} ${LIB_DIR}

#chown ':wazuh-indexer' '/etc/default/wazuh-indexer'
#chown ':wazuh-indexer' '/etc/wazuh-indexer'
#chmod '2750' '/etc/wazuh-indexer'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/certs'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/certs/admin-key.pem'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/certs/admin.pem'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/certs/wazuh-indexer-key.pem'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/certs/wazuh-indexer.pem'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/certs/root-ca.pem'
#chmod '2750' '/etc/wazuh-indexer/certs'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/elasticsearch.yml'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/jvm.options'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/jvm.options.d'
#chmod '2750' '/etc/wazuh-indexer/jvm.options.d'
#chown ':wazuh-indexer' '/etc/wazuh-indexer/log4j2.properties'
#chown ':wazuh-indexer' '/usr/share/wazuh-indexer/bin/instances.yml'
#chown ':wazuh-indexer' '/usr/share/wazuh-indexer/bin/wazuh-cert-tool.sh'
#chown ':wazuh-indexer' '/usr/share/wazuh-indexer/bin/wazuh-passwords-tool.sh'
#chown ':wazuh-indexer' '/usr/share/wazuh-indexer/plugins/opendistro_security' -R
#chown 'wazuh-indexer:wazuh-indexer' '/var/lib/wazuh-indexer'
#chown 'wazuh-indexer:wazuh-indexer' '/usr/share/wazuh-indexer/initial_nodes' -R
#chmod '2750' '/var/lib/wazuh-indexer'
#chown 'wazuh-indexer:wazuh-indexer' '/var/log/wazuh-indexer'
#chmod '2750' '/var/log/wazuh-indexer'
#
#chmod '750' '/etc/init.d/wazuh-indexer'
#chmod '750' '/usr/share/wazuh-indexer/plugins/opendistro_security/tools/audit_config_migrater.bat'
#chmod '750' '/usr/share/wazuh-indexer/plugins/opendistro_security/tools/audit_config_migrater.sh'
#chmod '750' '/usr/share/wazuh-indexer/plugins/opendistro_security/tools/hash.bat'
#chmod '750' '/usr/share/wazuh-indexer/plugins/opendistro_security/tools/hash.sh'
#chmod '750' '/usr/share/wazuh-indexer/plugins/opendistro_security/tools/install_demo_configuration.sh'
#chmod '750' '/usr/share/wazuh-indexer/plugins/opendistro_security/tools/securityadmin.bat'
#chmod '750' '/usr/share/wazuh-indexer/plugins/opendistro_security/tools/securityadmin.sh'
#chmod '750' '/usr/share/wazuh-indexer/bin/wazuh-passwords-tool.sh'
#chmod '750' '/usr/share/wazuh-indexer/bin/wazuh-cert-tool.sh'
#chmod '640' '/usr/share/wazuh-indexer/bin/instances.yml'
#chmod '755' '/usr/share/wazuh-indexer/bin/systemd-entrypoint'

#
# This script is executed in the post-installation phase
#
#   On Debian,
#       $1=configure : is set to 'configure' and if $2 is set, it is an upgrade
#
#   On RedHat,
#       $1=0         : indicates a removal
#       $1=1         : indicates an upgrade

# source the default env file
if [ -f "/etc/default/wazuh-indexer" ]; then
    . "/etc/default/wazuh-indexer"
fi

#if [ ! -d "/var/lib/wazuh-indexer/nodes" ]; then
#    cp -r /usr/share/wazuh-indexer/initial_nodes /var/lib/wazuh-indexer/nodes
#    chown ${NAME}:${NAME} /var/lib/wazuh-indexer/nodes -R
#fi

export OPENSEARCH_PATH_CONF=${OPENSEARCH_PATH_CONF:-/etc/wazuh-indexer}

IS_UPGRADE=false

case "$1" in

    # Debian ####################################################
    configure)

        # If $1=configure and $2 is set, this is an upgrade
        if [ -n $2 ]; then
            IS_UPGRADE=true
        fi
        PACKAGE=deb
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
        PACKAGE=deb
    ;;

    # RedHat ####################################################
    1)
        # If $1=1 this is an install
        IS_UPGRADE=false
        PACKAGE=rpm
    ;;
    2)
        # If $1=1 this is an upgrade
        IS_UPGRADE=true
        PACKAGE=rpm
    ;;

    *)
        echo "post install script called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# to pick up /usr/lib/sysctl.d/wazuh-indexer.conf
if command -v systemctl > /dev/null; then
    systemctl restart systemd-sysctl.service || true
fi

# Code for restarting the service if necessary moved to the end, after everything related with
# performance analyzer or keystore is done

# the equivalent code for rpm is in posttrans
#if [ "$PACKAGE" = "deb" ]; then
#    if [ ! -f "${OPENSEARCH_PATH_CONF}"/opensearch.keystore ]; then
#        /usr/share/wazuh-indexer/bin/elasticsearch-keystore create
#        chown root:wazuh-indexer "${OPENSEARCH_PATH_CONF}"/opensearch.keystore
#        chmod 660 "${OPENSEARCH_PATH_CONF}"/elasticsearch.keystore
#        md5sum "${OPENSEARCH_PATH_CONF}"/elasticsearch.keystore > "${OPENSEARCH_PATH_CONF}"/.elasticsearch.keystore.initial_md5sum
#    else
#        if /usr/share/wazuh-indexer/bin/elasticsearch-keystore has-passwd --silent ; then
#          echo "### Warning: unable to upgrade encrypted keystore" 1>&2
#          echo " Please run elasticsearch-keystore upgrade and enter password" 1>&2
#        else
#          /usr/share/wazuh-indexer/bin/elasticsearch-keystore upgrade
#        fi
#    fi
#fi




## Post install script from opendistro-performance-analyzer plugin
## adapted from plugins/opendistro-performance-analyzer/install/rpm/postinst 

# Post install script for Redhat like distros. Tested on CentOS 7.

# Cannot execute the plugin postinst script as suggested in the documentation with this command
#sh /usr/share/wazuh-indexer/plugins/opendistro-performance-analyzer/install/rpm/postinst 1
# because it contains elasticsearch instructions that now should be replaced by wazuh-indexer
# Using the modified code here:


# Make sure the OPENSEARCH_HOME environment variable is set
if [ -z "$OPENSEARCH_HOME" ]; then
  OPENSEARCH_HOME=/usr/share/wazuh-indexer
fi

# Prepare the RCA reader process for execution
mkdir -p "/var/lib/wazuh-indexer"
echo 'true' > /var/lib/wazuh-indexer/performance_analyzer_enabled.conf
echo 'true' > /var/lib/wazuh-indexer/rca_enabled.conf
chown ${NAME}:${NAME} /var/lib/wazuh-indexer/performance_analyzer_enabled.conf
chown ${NAME}:${NAME} /var/lib/wazuh-indexer/rca_enabled.conf
chown -R ${NAME}:${NAME} $OPENSEARCH_HOME/performance-analyzer-rca

#if ! grep -q '## OpenDistro Performance Analyzer' /etc/wazuh-indexer/jvm.options; then
   #CLK_TCK=`/usr/bin/getconf CLK_TCK`
   #echo >> /etc/wazuh-indexer/jvm.options
   #echo '## OpenDistro Performance Analyzer' >> /etc/wazuh-indexer/jvm.options
   #echo "-Dclk.tck=$CLK_TCK" >> /etc/wazuh-indexer/jvm.options
   #echo "-Djdk.attach.allowAttachSelf=true" >> /etc/wazuh-indexer/jvm.options
   #echo "-Djava.security.policy=file:///usr/share/wazuh-indexer/plugins/opendistro-performance-analyzer/pa_config/es_security.policy" >> /etc/wazuh-indexer/jvm.options
#fi


IS_UPGRADE=false
# Below codeblock is using the fact that postinst script is called with the most-recently configured version.
# In other words, a fresh installed will be called like "postinst configure" with no previous version ($2 is null)
if [ -z "$2" ]; then
  # If $2 is null, this is an install

  # ---------------------------------------------------------------------------
	sysctl -w vm.max_map_count=262144 > /dev/null 2>&1 
	ulimit -Hn 65535 > /dev/null 2>&1 

  if command -v sudo > /dev/null 2>&1; then
      sudo -u ${NAME} CLK_TK=`getconf CLK_TCK` OPENSEARCH_PATH_CONF=${CONFIG_DIR} ${INSTALLATION_DIR}/bin/opensearch --quiet > /dev/null 2>&1 &
  else
      CLK_TK=`getconf CLK_TCK` OPENSEARCH_PATH_CONF=${CONFIG_DIR} ${INSTALLATION_DIR}/bin/opensearch --quiet > /dev/null 2>&1 &
  fi

	sleep 15

	chmod +x ${INSTALLATION_DIR}/plugins/opensearch-security/tools/securityadmin.sh 

  if command -v sudo > /dev/null 2>&1; then
      sudo -u ${NAME} OPENSEARCH_PATH_CONF=${CONFIG_DIR} JAVA_HOME=${INSTALLATION_DIR}/jdk ${INSTALLATION_DIR}/plugins/opensearch-security/tools/securityadmin.sh -icl -p 9800 -cd ${INSTALLATION_DIR}/plugins/opensearch-security/securityconfig/ -nhnv -cacert ${CONFIG_DIR}/certs/root-ca.pem -cert ${CONFIG_DIR}/certs/admin.pem -key ${CONFIG_DIR}/certs/admin-key.pem >> ${LOG_DIR}/securityadmin.log
  else
      OPENSEARCH_PATH_CONF=${CONFIG_DIR} JAVA_HOME=${INSTALLATION_DIR}/jdk ${INSTALLATION_DIR}/plugins/opensearch-security/tools/securityadmin.sh -icl -p 9800 -cd ${INSTALLATION_DIR}/plugins/opensearch-security/securityconfig/ -nhnv -cacert ${CONFIG_DIR}/certs/root-ca.pem -cert ${CONFIG_DIR}/certs/admin.pem -key ${CONFIG_DIR}/certs/admin-key.pem >> ${LOG_DIR}/securityadmin.log
  fi

	sleep 5

	kill -15 `pgrep -f opensearch` > /dev/null 2>&1

	sleep 10

  #rm -rf ${LOG_DIR}/* > /dev/null 2>&1

else
  # otherwise it is an upgrade
  IS_UPGRADE=true
fi

# --- Do not edit ---
#DEBHELPER#
# --- Do not edit ---

if [ "x$IS_UPGRADE" != "xtrue" ]; then
    echo "TEST"
elif [ "$RESTART_ON_UPGRADE" = "true" ]; then

    echo -n "Restarting wazuh-indexer service..."
    if command -v systemctl >/dev/null; then
        systemctl daemon-reload
        systemctl restart wazuh-indexer.service || true

    elif [ -x /etc/init.d/wazuh-indexer ]; then
        if command -v invoke-rc.d >/dev/null; then
            invoke-rc.d wazuh-indexer stop || true
            invoke-rc.d wazuh-indexer start || true
        else
            /etc/init.d/wazuh-indexer restart || true
        fi

    # older suse linux distributions do not ship with systemd
    # but do not have an /etc/init.d/ directory
    # this tries to start the wazuh-indexer service on these
    # as well without failing this script
    elif [ -x /etc/rc.d/init.d/wazuh-indexer ] ; then
        /etc/rc.d/init.d/wazuh-indexer restart || true
    fi
    echo " OK"
fi

